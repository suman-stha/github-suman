1. To install nginx
---
- hosts: webservers
  become: true
  become_user: root
  tasks:
  - name: Inatall nginx package
    yum: name=nginx state=present

2.To copy the script file and run that script file.
---
- hosts: webservers
  become: true
  become_user: root
  tasks:
  - name : Transfer the script file
    copy: src=/tmp/test.sh dest=/tmp/
  - name: Execute the script
    command: sh /tmp/test.sh
3.To install tomcat, start service, deploy sample war file
---
- hosts: webservers
  become: true
  become_user: root
  tasks:
  - name: Install tomcat package
    yum: name=tomcat state=latest
  - name: Start the tomcat service
    service: name=tomcat state=started
  - name: Deploy sample.war 
    copy: src=sample.war dest=/usr/share/tomcat/webapps
    notify: restart tomcat
  handlers:
  - name: restart tomcat
    service: name=tomcat state=restarted

4.To install httpd package copy file to des and restart httpd 

---
- hosts: webservers
  become: true
  become_user: root
  vars:  
   src_path: /etc/ansible
   dest_path: /var/www/html
  tasks: 
  - name: Install httpd package
    yum: name=httpd state=present
  - name: Start httpd service
    service: name=httpd state=started
  - name: Deploy file
    copy: src={{src_path}}/index.html dest={{dest_path}}
    notify: restart httpd
  handlers: 
   - name: restart httpd    
     service: name=httpd state=restarted 
     
     
     
 # Playbook to copy the files with conditions
 ---
- hosts: webservers
  become: true
  become_user: root
  tasks:
  - name: copy the file
    copy:
     src: /tmp/abcd1
     dest: /tmp
     owner: unixadm
     group: root
     mode: 0777    
    when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '7'
    
    
  EXAMPLES:
- name: install the latest version of Apache
  yum:
    name: httpd
    state: latest

- name: remove Apache package
  yum: 
    name: httpd
    state: absent

- name: install the latest version of Apache from the testing repo
  yum :
    name: httpd
    enablerepo: testing
     
- name: install one specific version of Apache
  yum: httpd-2.2.29-1.4.amazn1
    state: present
- name: upgrade all packages
  yum: 
   name: '*'
   state: latest

- name: upgrade all packages, excluding kernel and foo related packages
  yum :
    name: '*'
    state: latest
    exclude: kernel*, foo*

- name: install the nginx rpm from a remote repo
  yum: 
    name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos -6-0.el6.ngx.
    state: present

- name: install nignx rpm from a local file
  yum: 
    name: /usr/local/src/nginx-release-centos-6.0.el6.ngx.noarch.rpm
    state: present

- name: install the 'Development tools' package group
  yum: 
    name: "Development tools"
    state: present
 -name: install the 'Gnome desktop' environment group
  yum: 
    name: "@^gnome-desktop-environment"
    state: present

- name: List ansible packages and register result to print with the debug later
  yum: 
    list: ansible
  register: result 
  
  #Multitask playbooks
  ---
- hosts: webservers
  become: true
  become_user: root
  tasks: 
  - name: latest vsftpd version installation
    yum:
      name: vsftpd 
      state: latest
  - name: latest firewalld version installation
    yum: 
     name: firewalld
     state: latest
  - name: vsftpd enable and running
    service:
       name: vsftpd
       enabled: true
       state: started
  - name: firewalld eanbled and running
    service: 
      name: firewalld
      enable: true
      state: started


#To install the apache web server
---
steps for the installation of Apache Web Server
1. Install latest package of httpd
2.Start & enable the httpd service
3. Install latest package for firewalld
4. Start and enable firewalld service
5.Permit http service at firewall
6. Create simple html web page
7. Defining web server name i.e. www.client1.example.com
8. Update its entry in n/etc/hosts file

#playbook
---
- hosts: webservers
  become: true
  become_user: root
  tasks:
  - name: Install latest package of httpd
    yum:
      name: httpd
      state: latest
  - name: Start and enable the http service
    service: 
      name: httpd
      enabled: true
      start: started
  - name: Install latest package of firewalld
    yum:
      name: firewalld
      state: latest
  - name: Start & Enable the firewalld service
    service:
       name: firewalld
       enabled: true
       state: started
  - name: Permit http service
    firewalld: 
       service: http
       permanent: true
       state: enabled
       immediate: yes
  - name: Create simple html web page
    copy: 
      content: "Welcome to the Ansible learning course module\n"
      dest: /var/www/html/index.html

  - name: Defining Web Server Name
    lineinfile: 
      path: /etc/httpd/conf/httpd.conf
      line: ServerName 192.169.1.20:80
      insertafter: "#ServerName"
  - name: Update its entry in /etc/hosts
    lineinfile:
       path: /etc/hosts
       line:  10.142.0.2 10.142.0.3
       
    #install maridb when the memory is more than 300MB   
       - name: install mariadb-server if enough space on root i.e. more than 300MB
  yum: 
    name: mariadb-server
    state: latest
    with_items: "{{ansible_mounts}}"
    when: item.mount == "/" and item.size_available > 300000000

# loop in ansible
- yum: 
   name: "{{item}}"
   state: latest
  with_items: 
  - postfix
  - dovecot
   

#
vars:
 mail_services:
 - postfix
 - dovecot

tasks:
 - yum:
   name: "{{item}}"
   state: latest
  with_items: "{{mail_services}}"


- user:
  name: "{{item.name}}"
  state: present
  groups: "{{item.groupd}}"
 with_items:
 - {name: 'jane', groups: 'wheel'}
 
 
 #--- 
- hosts: all
  tasks: 
  - name: Install httpd Package
    yum: name=httpd state=latest
  - name: Copy httpd configuratio nfile
    copy: src=/data/httpd.original dest=/var/www/html
    notify:
    - restart apache
  - name: Start and Enable httpd service
    service: name=httpd state=restarted enabled=yes
  handlers:
  - name: restart apache
    service: name=httpd state=restarted


# 
---
- hosts: myweb
  become: true
  become_user: root
  become_method: sudo 
  tasks: 
  - name: Stopping the Control  M app1 (ctm_stop.sh)
    shell: /opt/aptm/ctm_stop.sh > /tmp/out2 2>&1
    register: appr_check
  - debug: msg="CTM App1 stopped successfully"
    when: appr_check.rc == 0
  - name: Log Message for Control M App1
    command: cat /tmp/out2
    register: logmsg
  - debug: msg="{{ logmsg.stdout_lines }}"
