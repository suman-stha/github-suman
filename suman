uncomment the inventory on ansible.confg file.
on master:visudo > add user  
on all server:etc/ssh/sshd > passwordauthentication yes
ansible all -m ping
from master:ssh-copy-id -i <private ip>
to login to slave: ssh <private ip>
hosts file: cd /etc/ansible/hosts


https://ansible-tips-and-tricks.readthedocs.io/en/latest/ansible/commands/


#To give color to user
export PS1="/e[1;31m[\u@\h \w]\$ \e[m"
#To install ansible
1.install the rpm
2.yum install -y ansible 


#generate ssh key
ssh-keygen	

#copy the ssh key  of server to the host machine 
ssh-copy-id -i user@ip 
then give the password of host machine user

#To check the connection between sever and host machine
ssh user@ip 
It should redirect you to the terminal of the host machine.

#To connect the host machine by hostname 
add ip and  hostname in same line  /etc/hosts file

#To ping the hosts
ansible -m ping webservers
ansible -m ping <ip>

#To see the uptime
ansible -m command -a "uptime" webservers 
ansible -m command -a "uptime " <ip>

#To check all the modules
ansible-doc -l

#To check specific modules
ansible-doc <module name>
eg: ansible-doc ping
    ansible-doc command

#To create the user in the hosts machine
ansible webservers -m user -a "name=john password=john" -s

#to check the facts of the inventory 
ansible webservers -m setup

ansible webservers j-m setup -a "filter=ansible_user"




cd /usr/lib/python2.7/site-packages/ansible/moudules/commands && ls

#To check the id in host machine
id john


#To check the details of user module
ansible-doc user

#To check the package
rpm -qa <package>
eg: rpm -qa httpd

#ad-hocs commands
ansible webservers -m yum -a "name=httpd state=present" -s 

#to check the status
systemctl status https

#To start the service
ansible webservers -m service -a "name=httpd state=started" -s
 ad-hoc commands are used to check the host machine immediately.

#To remove the package
ansible webservers -m yum -a "name=httpd state=absent" -s
 
#To copy the file
ansible webservers -m copy -a "src=/tmp/file.txt dest=/tmp/file.txt"

#To install the git
asible webservers -m yum -a "name=git state=present" -s 

#To pull the code use git module
ansible webservers -m git -a "repo=https://github.com/suman-stha/shell_script.git dest=/tmp/gitrepo version=HEAD" -s



#To see the list of hosts
ansible --list-hosts webservers

#To check the syntax of the playbook
ansible-playbook playbook1.yml --syntax-check

#To run the playbook
ansible-playbook playbook1.yml

#To remove the package
yum remove git(Package name)

#ansible roles
cd /etc/ansible
cd roles
sudo mkdir tomcat
sudo mkdir files handlers meta tasks vars

#meta is nothing but der
all the task goes to task directory

#To download the jenkins roles
First go to the roles directory and then execute the following command
sudo ansible-galaxy install --roles-path /etc/ansible/roles geerlingguy

#sudo ansible-galaxy init demorole

#To execute the roles , add the role in main playbook yml file.
---
-hosts: webservers
 become: true
 become_true: root
 vars: jenkins_http_port: 9090
 roles:
 - tomcat
 - apache
 - geerlingguy.java
 - gerlingguy.jenkins

#ansible commands
ansible -m command -a "uptime" webservers
ansible -m command -a "uname -a " webservers
ansible -m ping webservers
ansible -m command -a "hostname" webservers

#ansible inventory files
[webservers]
localhost ansible_connection=local
web1.example.com
web2.example.com: 1234 ansible_commention=ssh ansible_user=ftaylor
[db-servers]
web1.example.com
db1.example.com

#Simplifying host inventories with ranges
192.168.[4:7].[0:255] -all IP addresses in the 192.168.4.0/22 network (192.168.4.0 through)
(192.168.7.255).

server[01:20].example.com -all hosts named server01.example through server20.example.com

#To check the uptime
ansible -m command -a "uptime" webservers

#To change the permision of file which is in hosts servers
ansible -m file -a "dest=/tmp/test.sh mode=777 owner=root group=root" webservers --become -become-method=sudo --become-user=root -K

#To check the OS
cat /etc/redhat-release
ansible -m command -a "cat /etc/redhat-release" webservers
cat /etc/os-release

#Hostname
vi /etc/sysconfig/network
hostname client3.example.com
su -root

#To check the ip of the hosts machines
ansible webservers -m command -a /usr/bin/hostname
 
#To check the os version
ansible -m command -a "uname -r" webservers

#To copy the hosts file to the hosts machine
ansible -m copy -a "src=/etc/hosts dest=/tmp/hosts" webservers --become -K
ansible -m copy -a "src=/tmp/practise dest=/tmp/practise" --become -K se

#

#To add the content on file on hosts machine
ansible -m copy -a 'content="Managed by ansible\n" dest=/tmp/practise' webservers --become -K



#To copy between servers
scp -p l.sh intelycorellc@192.168.1.21:/Users/intelycorellc

sftp intelycorellc@192.168.1.21
get suman.txt
put examples.desktop


#The modules directory
cd /usr/lib/python2.7/site-packages/ansible/modules

#To install tree package
ansible webservers -m yum -a "name=tree state=present" --become -K
#To check the tree package
rpm -qa |grep -i tree

ansible -m yum -a "name=httpd state=present" webservers -s
ansible -m service -a "name=htpd state=started" webservers -s





